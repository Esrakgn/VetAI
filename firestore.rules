/**
 * @description This ruleset enforces a strict user-ownership model for alerts. Users can only access alerts that belong to them.
 * @dataStructure All alert data is nested under /users/{userId}/alerts/{alertId}.
 * @keySecurityDecisions
 *  - Users can only list alerts they own.
 *  - Users can only create alerts for themselves, with the userId field matching their own UID.
 *  - Data validation is relaxed in this prototyping phase, but ownership is strictly enforced.
 * @denormalizationForAuthorization The Alert entity includes a `userId` field, denormalizing ownership for efficient rule enforcement.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows users to read and write their own alerts.
     * @path /users/{userId}/alerts/{alertId}
     * @allow (list) User A5kYRtteYwZ9GBaEDbtu1UNMowz1 can list alerts under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts
     * @allow (get) User A5kYRtteYwZ9GBaEDbtu1UNMowz1 can get alert with ID alert123 under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts/alert123
     * @allow (create) User A5kYRtteYwZ9GBaEDbtu1UNMowz1 can create an alert under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts with userId: "A5kYRtteYwZ9GBaEDbtu1UNMowz1".
     * @allow (update) User A5kYRtteYwZ9GBaEDbtu1UNMowz1 can update alert with ID alert123 under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts/alert123
     * @allow (delete) User A5kYRtteYwZ9GBaEDbtu1UNMowz1 can delete alert with ID alert123 under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts/alert123
     * @deny (list) User Bxyz cannot list alerts under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts
     * @deny (create) User Bxyz cannot create an alert under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts
     * @deny (update) User Bxyz cannot update alert with ID alert123 under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts/alert123
     * @deny (delete) User Bxyz cannot delete alert with ID alert123 under /users/A5kYRtteYwZ9GBaEDbtu1UNMowz1/alerts/alert123
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/alerts/{alertId} {
      // Helpers
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return isSignedIn() && request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      // Read Permissions
      allow get: if isSignedIn();
      allow list: if isOwner(userId);

      // Write Permissions
      allow create: if isOwner(userId) && request.resource.data.userId == request.auth.uid;
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }
  }
}